/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * All details about the Content of a Resource.
 */
@ApiModel(description = "All details about the Content of a Resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-13T11:19:56.034Z")
public class Content {
  @SerializedName("embeddings")
  private List<Double> embeddings = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("resource")
  private String resource = null;

  @SerializedName("text")
  private String text = null;

  public Content embeddings(List<Double> embeddings) {
    this.embeddings = embeddings;
    return this;
  }

  public Content addEmbeddingsItem(Double embeddingsItem) {
    if (this.embeddings == null) {
      this.embeddings = new ArrayList<Double>();
    }
    this.embeddings.add(embeddingsItem);
    return this;
  }

   /**
   * Get embeddings
   * @return embeddings
  **/
  @ApiModelProperty(value = "")
  public List<Double> getEmbeddings() {
    return embeddings;
  }

  public void setEmbeddings(List<Double> embeddings) {
    this.embeddings = embeddings;
  }

  public Content id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The database generated content ID
   * @return id
  **/
  @ApiModelProperty(value = "The database generated content ID")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Content resource(String resource) {
    this.resource = resource;
    return this;
  }

   /**
   * The resource to which the content refers
   * @return resource
  **/
  @ApiModelProperty(value = "The resource to which the content refers")
  public String getResource() {
    return resource;
  }

  public void setResource(String resource) {
    this.resource = resource;
  }

  public Content text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Content content = (Content) o;
    return Objects.equals(this.embeddings, content.embeddings) &&
        Objects.equals(this.id, content.id) &&
        Objects.equals(this.resource, content.resource) &&
        Objects.equals(this.text, content.text);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embeddings, id, resource, text);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Content {\n");
    
    sb.append("    embeddings: ").append(toIndentedString(embeddings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

