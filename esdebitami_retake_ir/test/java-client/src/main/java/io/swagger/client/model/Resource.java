/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ObjectId;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * All details about the Resource.
 */
@ApiModel(description = "All details about the Resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-13T11:19:56.034Z")
public class Resource {
  @SerializedName("context")
  private String context = null;

  @SerializedName("embeddings")
  private List<Double> embeddings = null;

  @SerializedName("id")
  private ObjectId id = null;

  @SerializedName("reference")
  private String reference = null;

  @SerializedName("uri")
  private String uri = null;

  public Resource context(String context) {
    this.context = context;
    return this;
  }

   /**
   * The context to which the resource refers
   * @return context
  **/
  @ApiModelProperty(value = "The context to which the resource refers")
  public String getContext() {
    return context;
  }

  public void setContext(String context) {
    this.context = context;
  }

  public Resource embeddings(List<Double> embeddings) {
    this.embeddings = embeddings;
    return this;
  }

  public Resource addEmbeddingsItem(Double embeddingsItem) {
    if (this.embeddings == null) {
      this.embeddings = new ArrayList<Double>();
    }
    this.embeddings.add(embeddingsItem);
    return this;
  }

   /**
   * Get embeddings
   * @return embeddings
  **/
  @ApiModelProperty(value = "")
  public List<Double> getEmbeddings() {
    return embeddings;
  }

  public void setEmbeddings(List<Double> embeddings) {
    this.embeddings = embeddings;
  }

  public Resource id(ObjectId id) {
    this.id = id;
    return this;
  }

   /**
   * The database generated resource ID
   * @return id
  **/
  @ApiModelProperty(value = "The database generated resource ID")
  public ObjectId getId() {
    return id;
  }

  public void setId(ObjectId id) {
    this.id = id;
  }

  public Resource reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public Resource uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * The Uniform Resource Identifier
   * @return uri
  **/
  @ApiModelProperty(value = "The Uniform Resource Identifier")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Resource resource = (Resource) o;
    return Objects.equals(this.context, resource.context) &&
        Objects.equals(this.embeddings, resource.embeddings) &&
        Objects.equals(this.id, resource.id) &&
        Objects.equals(this.reference, resource.reference) &&
        Objects.equals(this.uri, resource.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, embeddings, id, reference, uri);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Resource {\n");
    
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    embeddings: ").append(toIndentedString(embeddings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

