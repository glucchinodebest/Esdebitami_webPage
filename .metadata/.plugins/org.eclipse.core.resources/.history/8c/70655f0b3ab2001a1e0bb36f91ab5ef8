package it.esdebitamiretake.retake_ticket.service;

import java.util.List;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.stereotype.Service;

@Service
public class TemplateTypeService {
	
	@Autowired
	TemplateTypeRepository templateTypeRepository;
	
	@Autowired
	MongoTemplate mongoTemplate;

	private static final Logger logger = LoggerFactory.getLogger(TemplateTypeService.class);
	
	
	
	public List<TemplateType> findTypes(Integer status, Integer page, Integer pagesize) {

		return templateTypeRepository.findTemplateType(status, PageRequest.of(page, pagesize));
		
	}
	
	

	public List<TemplateType> findAll(Integer page, Integer pagesize) {

		return templateTypeRepository.findAll(PageRequest.of(page.intValue(), pagesize.intValue())).getContent();
	
	}

	public String save(TemplateType theTemplateType) {
		
		return templateTypeRepository.save(theTemplateType).getTemplateTypeId();
	}

	public void deleteTemplateType(String templateTypeId) {
		logger.debug("(Delete) Id = " + templateTypeId);
		TemplateType templateTypeToDelete = (TemplateType) this.mongoTemplate.findById(templateTypeId,
				TemplateType.class);
		if (templateTypeToDelete != null) {
			templateTypeRepository.delete(templateTypeToDelete);
		} else {
			logger.debug("(Delete) TemplateType to Delete is NULL");
		}
		logger.debug("(Delete) Deleted = OK");
	}

	public TemplateType findTemplateTypeById(String theTemplateTypeId) {
		logger.debug("JSON STRING = ?", theTemplateTypeId);
		TemplateType templateType = (TemplateType) this.mongoTemplate.findById(theTemplateTypeId, TemplateType.class);
		return templateType;
	}
	
	public List<TemplateType> findAllTypes() {

		return templateTypeRepository.findAll();
	
	}

}
